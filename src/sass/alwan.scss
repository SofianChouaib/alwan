@use 'sass:math';
@use 'variables' as var;

:root {
    --lw-pattern: #{var.$pattern-svg};
}

.alwan {
    width: 100%;
    max-width: var.$alwan-max-width;
    background: var(--alwan-bg, var.$alwan-background-light);
    border: 1px solid var(--alwan-bc, var.$alwan-border-color-light);
    
    &:not(.open) {
        visibility: hidden;
    }
    
    &:not(.lw-popper, .open) {
        overflow: hidden;
        height: 0;
        border: 0;
    }

    &[data-theme="dark"] {
        --alwan-bg: #{var.$alwan-background-dark};
        --alwan-bc: #{var.$alwan-border-color-dark};
        --lw-swatches-bg: #{var.$swatches-background-dark};
        --lw-bc: #{var.$border-color-dark};
        --lw-thumb: #{var.$thumb-background-dark};
        --lw-thumb-bc: #{var.$thumb-border-color-dark};
        --lw-label: #{var.$input-label-color-dark};
        --lw-input-bg: #{var.$input-background-dark};
        --alwan-fg: #{var.$alwan-forground-dark};
        --lw-btn-hover: #{var.$button-hover-background-dark};
    }

    &__container {
        display: flex;
        align-items: center;
        padding: var.$container-padding;
        border-top: 1px solid var(--lw-bc, var.$border-color-light);
    }

    &__palette {
        overflow: hidden;
        height: var.$palette-height;
        outline: 0;
        background: linear-gradient(to bottom, transparent, #000),
                    linear-gradient(to right, #fff, hsl(var(--hue, 0), 100%, 50%));

        &.lw-focus:focus {
            & .alwan__marker {
                border-color: var.$primary-color;
            }
        }
    }

    &__marker {
        width: var.$marker-width;
        height: var.$marker-height;
        border-radius: 99em;
        background: transparent;
        box-sizing: border-box;
        border: var.$marker-border;
        box-shadow: var.$marker-box-shadow;
        cursor: move;
    }

    & &__preview {
        position: relative;
        width: var.$preview-width;
        height: var.$preview-height;
        background: var(--lw-pattern);
        flex-shrink: 0;

        .lw-btn {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
            color: #fff;
            opacity: 0;
            border-radius: 0;

            &.lw-focus:focus,
            &:hover {
                opacity: 1;
                z-index: 100;
                background-color: rgba(0,0,0,0.6);
            }
        }
    }

    &__slider {
        width: 100%;
        background-color: transparent;
        margin: 0;
        padding: 0;
        cursor: pointer;
        -webkit-appearance: none;
        --lw-alpha: linear-gradient(90deg, transparent, rgb(var(--rgb))), var(--lw-pattern);
        --lw-hue: linear-gradient(
            -90deg,
            #ff0000,
            #ffff00,
            #00ff00,
            #00ffff,
            #0000ff,
            #ff00ff,
            #ff0000
        );

        &:active {
            cursor: ew-resize;
        }

        // Slider track.
        &::-webkit-slider-runnable-track {
            -webkit-appearance: none;
            height: var.$track-height;
            border: 0;

            &:active {
                cursor: ew-resize;
            }
        }
        &::-moz-range-track {
            height: var.$track-height;
            border: 0;
        }

        // Slider thumb.
        &::-webkit-slider-thumb {
            -webkit-appearance: none;
            height: var.$thumb-height;
            width: var.$thumb-width;
            margin-top: - math.div(var.$thumb-height - var.$track-height, 2);
            background-color: var(--lw-thumb, var.$thumb-background);
            border-radius: var.$thumb-border-radius;
            border: 1px solid var(--lw-thumb-bc, var.$thumb-border-color);
            box-shadow: var.$thumb-box-shadow;
            cursor: ew-resize;
        }
        &::-moz-range-thumb {
            box-sizing: border-box;
            width: var.$thumb-width;
            height: var.$thumb-height;
            padding: 0;
            background-color: var(--lw-thumb, var.$thumb-background);
            border: 1px solid var(--lw-thumb-bc, var.$thumb-border-color);
            border-radius: var.$thumb-border-radius;
            box-shadow: var.$thumb-box-shadow;
            cursor: ew-resize;
        }

        // Hue slider.
        &--hue::-webkit-slider-runnable-track {
            background: var(--lw-hue);
        }

        &--hue::-moz-range-track {
            background: var(--lw-hue)
        }

        // Opacity slider.
        &--alpha {

            margin-top: var.$alpha-slider-margin-top;

            &::-webkit-slider-runnable-track {
                background: var(--lw-alpha);
            }

            &::-moz-range-track {
                background: var(--lw-alpha);
            }
        }
    }

    &__inputs {
        display: flex;
        width: 100%;

        label {
            width: 100%;
            text-align: center;
            margin-right: var.$input-label-margin-right;
            text-transform: uppercase;
            color: var(--lw-label, var.$input-label-color);
            cursor: pointer;
            font-family: var.$input-label-font-family;
            font-size: var.$input-label-font-size;
        }
    }

    &__input {
        display: block;
        width: 100%;
        box-sizing: border-box;
        padding: var.$input-padding;
        text-align: center;
        color: var(--alwan-fg, var.$input-color);
        font-family: var.$input-font-family;
        border:  1px solid var(--lw-bc, var.$border-color-light);
        margin-bottom: var.$input-margin-bottom;
        background-color: var(--lw-input-bg);

        &:focus {
            outline: 0;
            border-color: var.$primary-color;

            + span {
                color: var.$primary-color;
            }
        }
    }

    &__swatches {
        display: flex;
        justify-content: center;
        flex-wrap: wrap;
        background-color: var(--lw-swatches-bg, var.$swatches-background-light);
        padding: var.$swatches-container-padding;
        max-height: var.$swatches-max-height;
        overflow-y: auto;
        box-sizing: border-box;
    }

    &__swatch {
        position: relative;
        width: var.$swatch-width;
        height: var.$swatch-height;
        padding: 0;
        border: 0;
        margin: var.$swatch-margin;
        cursor: pointer;
        background-image: var(--lw-pattern);
        border-radius: var.$swatch-border-radius;
        overflow: hidden;

        &:focus {
            outline: 1px dashed var(--lw-color);
            outline-offset: 2px;
        }
    }

    &.lw-popper {
        position: fixed;
        z-index: 9999;
        border: 0;
        box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2),
                    0px 8px 10px 1px rgba(0, 0, 0, 0.14),
                    0px 3px 14px 2px rgba(0, 0, 0, 0.12);
    }

    .lw-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: transparent;
        z-index: 9999999999;
        cursor: move;
    }

    .lw-btn {
        display: inline-block;
        background: transparent;
        color: var(--alwan-fg);
        border: 0;
        cursor: pointer;
        padding: var.$button-padding;
    
        &:hover {
            background-color: var(--lw-btn-hover, var.$button-hover-background);
        }
    
        svg {
            fill: currentColor;
            pointer-events: none;
            vertical-align: middle;
        }
    }

    .lw-mr {
        margin-right: var.$preview-margin-right;
    }
    
    .lw-w100 {
        width: 100%;
    }
}

// To display color on top of the transparency pattern.
.alwan__swatch::before,
.alwan__preview::before,
.lw-ref::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--lw-color);
}

.lw-ref {
    position: relative;
    display: inline-block;
    width: var.$ref-button-width;
    height: var.$ref-button-height;
    border: 0;
    padding: 0;
    cursor: pointer;
    overflow: hidden;
    border-radius: var.$ref-button-border-radius;
    background: var(--lw-pattern);

    &:focus {
        outline: 1px dashed var(--lw-color);
        outline-offset: 2px;
    }
}

.lw-disabled {
    cursor: not-allowed;
}